{% comment %}
    ** This snippet was generated by Beae - Flexible Page Builder V2.0
{% endcomment %}
{% comment %}Render Beae meta tag{% endcomment %}
{% if page and page.metafields.beae.html_meta %}
    {{page.metafields.beae.html_meta}}
  {% endif %}
  {% comment %}End render Beae meta tag{% endcomment %}
  {% comment %}
      ** This snippet was generated by Beae - Flexible Page Builder V2.0
  {% endcomment %}
  {% assign beae_header = false %}
  {{ 'beae.base.min.css' | asset_url | stylesheet_tag }}
  {% capture the_snippet_beae-global-theme-setting %}{% render 'beae-global-theme-setting' %}{% endcapture %}
  {% unless the_snippet_beae-global-theme-setting contains 'Liquid error' %}
      {{ the_snippet_beae-global-theme-setting }}
  {% endunless %}
  {% if request.design_mode %}
        <script defer>
          (function() {
              function seq(arr, callback, index) {
                  if (typeof index === 'undefined') {
                      index = 0;
                  }
  
                  arr[index](function () {
                      index++;
                      if (index === arr.length) {
                          callback();
                      } else {
                          seq(arr, callback, index);
                      }
                  });
              }
              function scriptsDone() {
              if (window.beaeLazy && typeof window.beaeLazy == 'function') {
                  window.beaeLazy('.beae-bg-lazy,.beae-iframe-lazy,.beae-img-lazy');
              }
              if(document.querySelectorAll('#' + window.beaeSectionId +  ' .beae-swiper-container')) {
                  document.querySelectorAll('#' + window.beaeSectionId +  ' .beae-swiper-container').forEach(x => {
                  x.classList.add('beae-swiper-interactived')
              })
              }
              console.log('load scripts section beae done')
              }
              function insertScript($script, callback) {
                  var s = document.createElement('script');
                  s.type = 'text/javascript';
                  if ($script.src) {
                      s.onload = callback;
                      s.onerror = callback;
                      s.src = $script.src;
                  } else {
                      s.textContent = $script.innerText;
                  }
                  if (!document.querySelector('#beae-container-js-section-' + window.beaeSectionId)) {
                      let content = document.createElement('div');
                      content.id = 'beae-container-js-section-' + window.beaeSectionId;
                      document.body.appendChild(content);
                      document.querySelector('#beae-container-js-section-' + window.beaeSectionId).appendChild(s);
                  } else {
                      document.querySelector('#beae-container-js-section-' + window.beaeSectionId).appendChild(s);
                  }
  
                  $script.parentNode.removeChild($script);
  
                  if (!$script.src) {
                      callback();
                  }
              }
  
              let runScriptTypes = [
                  'application/javascript',
                  'application/ecmascript',
                  'application/x-ecmascript',
                  'application/x-javascript',
                  'text/ecmascript',
                  'text/javascript',
                  'text/javascript1.0',
                  'text/javascript1.1',
                  'text/javascript1.2',
                  'text/javascript1.3',
                  'text/javascript1.4',
                  'text/javascript1.5',
                  'text/jscript',
                  'text/livescript',
                  'text/x-ecmascript',
                  'text/x-javascript'
              ];
  
              function runScripts($container) {
                  var $scripts = $container.querySelectorAll(' script');
                  var runList = [];
                  var typeAttr;
                  [].forEach.call($scripts, function ($script) {
                      typeAttr = $script.getAttribute('type');
                      if (!typeAttr || runScriptTypes.indexOf(typeAttr) !== -1) {
                          runList.push(function (callback) {
                              insertScript($script, callback);
                          });
                      }
                  });
                  seq(runList, scriptsDone);
              }
              document.addEventListener('shopify:section:load', (e) => {
                      if(e.target && e.target.querySelector('.beae-builder')) {
                      window.beaeSectionId = e.target.getAttribute('id');
                      runScripts(e.target);
                      }
              });
              document.addEventListener('shopify:section:unload', (e) => {
                  if(e.target && e.target.querySelector('.beae-builder')) {
                  let id = 'beae-container-js-section-' + e.srcElement.id;
                  if(document.getElementById(id)) {
                      document.getElementById(id).remove();
                  }
                  }
              });
          })();  
          </script>
      {% endif %}    
  {% unless beae_header %}<script src="{{ 'beae.base.min.js' | asset_url }}" defer="defer"></script>{% assign beae_header = true %}{% endunless %}
  <script>
    window.BEAE_HELPER = {
        routes: {
            cart_url: "{{ routes.cart_url }}",
            root_url: "{{ routes.root_url }}"
        },
        lang: "{{ request.locale.iso_code }}",
        available_lang: {{ request.locale | json }}
    };
  </script>
  {%- if request.page_type == "product" -%}
    <script>
      try {
        const beaeRecentlyViewedProducts = new Set(JSON.parse(localStorage.getItem("beaeRecentlyViewedProducts") || "[]"));
        beaeRecentlyViewedProducts.delete({{ product.id }}); // Delete first to re-move the product
        beaeRecentlyViewedProducts.add({{ product.id }});
        localStorage.setItem("beaeRecentlyViewedProducts", JSON.stringify(Array.from(beaeRecentlyViewedProducts.values()).reverse()));
      } catch (e) {
        // Safari in private mode does not allow setting item, we silently fail
      }
      </script>
  {%- endif -%}